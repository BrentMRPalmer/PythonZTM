# Sets
# Unordered collection of unique objects

my_set = {1, 2, 3, 4, 5, 5}
my_set.add(100)
my_set.add(7)
# print(my_set)

# my_list  = [1,2,3,4,5,5]
# unique = set(my_list)
# print(unique)
# print(4 in unique)
# print(len(my_set))
# print(list(my_set))
new_set = my_set.copy()
my_set.clear()
# print(my_set)
# print(new_set)

# Sets 2

my_set = {1,2,3,4,5}
your_set = {4,5,6,7,8,9,10}

# print(my_set.difference(your_set))
# print(my_set)
# my_set.discard(4)
# print(my_set)
# my_set.difference_update(your_set)
# print(my_set)
print(my_set.intersection(your_set))
print(my_set & your_set)
print(my_set.isdisjoint(your_set))
print(my_set.issubset(your_set))
print(my_set.union(your_set))
print(my_set | your_set)
print(my_set.issubset(my_set | your_set))
print((my_set | your_set).issuperset(my_set))

# Exercise

# You are working for the school Principal. We have a database of school students:
school = {'Bobby','Tammy','Jammy','Sally','Danny'}

# during class, the teachers take attendance and compile it into a list. 
attendance_list = ['Jammy', 'Bobby', 'Danny', 'Sally']

# using what you learned about sets, create a piece of code that the school principal 
# can use to immediately find out who missed class so they can call the parents. (Imagine
# if the list had 1000s of students. The principal can use the lists generated by the 
# teachers + the school database to use python and make his/her job easier): 
# Find the students that miss class!

print(school.difference(attendance_list))


